version: '3'
services:
# -----------------------Servicio ofertas -----------------------------
#  db_ofertas:
#    image: postgres
#    environment:
#      POSTGRES_DB: ofertas_db
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 2s
#      timeout: 5s
#      retries: 5
#    networks:
#      - service_ofertas
#
#  app_ofertas:
#    build: offers/
#    environment:
#      DB_NAME: ofertas_db
#      DB_HOST: db_ofertas
#      DB_PORT: 5432
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#      DATABASE_URL: postgresql://postgres:postgres@db_ofertas:5432/ofertas_db
#    ports:
#      - "3003:3003"
#    expose:
#      - "3003"
#    depends_on:
#      db_ofertas:
#        condition: service_healthy
#    networks:
#      - service_ofertas
#      - web_global
#
## -----------------------Servicio publicaciones -----------------------------
#  db_publicaciones:
#    image: postgres
#    restart: always
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=publicaciones_db
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 2s
#      timeout: 5s
#      retries: 5
#    networks:
#      - service_publicaciones
#
#  app_publicaciones:
#    build: servicio_publicaciones/
#    environment:
#      DB_NAME: publicaciones_db
#      DB_HOST: db_publicaciones
#      DB_PORT: 5432
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#    ports:
#      - "3001:3001"
#    expose:
#      - "3001"
#    depends_on:
#      db_publicaciones:
#        condition: service_healthy
#    networks:
#      - service_publicaciones
#      - web_global
#
### -----------------------Servicio trayectos -----------------------------
#  db_trayectos:
#    image: postgres
#    restart: always
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=trayectos_db
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 2s
#      timeout: 5s
#      retries: 5
#    networks:
#      - service_trayectos
#
#  app_trayectos:
#    build: servicio_trayectos/
#    environment:
#      DB_NAME: trayectos_db
#      DB_HOST: db_trayectos
#      DB_PORT: 5432
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#    ports:
#      - "3002:3002"
#    expose:
#      - "3002"
#    depends_on:
#      db_trayectos:
#        condition: service_healthy
#    networks:
#      - service_trayectos
#      - web_global
## -----------------------Servicio usuarios -----------------------------
  db_usuarios:
    image: postgres
    environment:
      POSTGRES_DB: usuarios_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - service_usuarios

  users:
    build: users/
    environment:
      DB_NAME: usuarios_db
      DB_HOST: db_usuarios
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DATABASE_URL: postgresql://postgres:postgres@db_usuarios:5432/usuarios_db
      VERIFICACION_WEBHOOK: http://verificacion:3011/verifying/webhook
      VERIFICACION_URL: http://verificacion:3011/
    ports:
      - "3000:3000"
    expose:
      - "3000"
    networks:
      - service_usuarios
      - web_global
    depends_on:
      db_usuarios:
        condition: service_healthy

## -----------------------Servicio new-service -----------------------------

#  new-service:
#    build: public/
#    environment:
#      OFFERS_URL: http://app_ofertas:3003/
#      USERS_URL: http://users:3000/
#      POSTS_URL: http://app_publicaciones:3001/
#      ROUTES_URL: http://app_trayectos:3002/
#    ports:
#      - "3010:3010"
#    expose:
#      - "3010"
#    networks:
#      - web_global

  verificacion:
    build: verificacion/
    environment:
      USERS_DB_NAME: usuarios_db
      USERS_DB_HOST: db_usuarios
      DB_PORT: 5432
      USERS_DB_USER: postgres
      USERS_DB_PASSWORD: postgres
      SECRET_TOKEN: a
      TRUENATIVE_URL: http://truenative:4000/
      DB_NAME: verificacion_db
      DB_HOST: db_verificacion
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "3011:3011"
    expose:
      - "3011"
    networks:
      - web_global
      - service_usuarios
      - service_verificacion
    depends_on:
      db_verificacion:
        condition: service_healthy

  db_verificacion:
    image: postgres
    environment:
      POSTGRES_DB: verificacion_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - service_verificacion

  truenative:
    image: ghcr.io/misw-4301-desarrollo-apps-en-la-nube/true-native:1.0.0
    environment:
      EXPRESS_RATE: 1
      SECRET_TOKEN: a
      BASIC_DELAY: 30
    ports:
      - "4000:4000"
    expose:
      - "4000"
    networks:
      - web_global


networks:
#  service_ofertas:
#  service_publicaciones:
#  service_trayectos:
  service_usuarios:
  service_verificacion:
  web_global:



